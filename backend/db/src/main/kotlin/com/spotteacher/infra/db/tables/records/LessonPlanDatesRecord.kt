/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records

import com.spotteacher.infra.db.tables.LessonPlanDates
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.LocalDateTime

/**
 * 授業計画の日付
 */
@Suppress("warnings")
open class LessonPlanDatesRecord private constructor() : UpdatableRecordImpl<LessonPlanDatesRecord>(LessonPlanDates.LESSON_PLAN_DATES) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var lessonPlanId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var startMonth: Long
        set(value): Unit = set(2, value)
        get(): Long = get(2) as Long

    open var startDay: Long
        set(value): Unit = set(3, value)
        get(): Long = get(3) as Long

    open var endMonth: Long
        set(value): Unit = set(4, value)
        get(): Long = get(4) as Long

    open var endDay: Long
        set(value): Unit = set(5, value)
        get(): Long = get(5) as Long

    open var startTime: LocalDateTime
        set(value): Unit = set(6, value)
        get(): LocalDateTime = get(6) as LocalDateTime

    open var endTime: LocalDateTime
        set(value): Unit = set(7, value)
        get(): LocalDateTime = get(7) as LocalDateTime

    open var createdAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised LessonPlanDatesRecord
     */
    constructor(
        id: Long? = null,
        lessonPlanId: Long,
        startMonth: Long,
        startDay: Long,
        endMonth: Long,
        endDay: Long,
        startTime: LocalDateTime,
        endTime: LocalDateTime,
        createdAt: LocalDateTime? = null,
        updatedAt: LocalDateTime? = null
    ) : this() {
        this.id = id
        this.lessonPlanId = lessonPlanId
        this.startMonth = startMonth
        this.startDay = startDay
        this.endMonth = endMonth
        this.endDay = endDay
        this.startTime = startTime
        this.endTime = endTime
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
