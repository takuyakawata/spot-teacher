/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records


import com.spotteacher.infra.db.enums.UploadFilesUploadStatus
import com.spotteacher.infra.db.tables.UploadFiles

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class UploadFilesRecord private constructor() : UpdatableRecordImpl<UploadFilesRecord>(UploadFiles.UPLOAD_FILES) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var fileKey: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var uploadStatus: UploadFilesUploadStatus
        set(value): Unit = set(2, value)
        get(): UploadFilesUploadStatus = get(2) as UploadFilesUploadStatus

    open var createdAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var updateAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised UploadFilesRecord
     */
    constructor(id: Long? = null, fileKey: String, uploadStatus: UploadFilesUploadStatus, createdAt: LocalDateTime? = null, updateAt: LocalDateTime? = null): this() {
        this.id = id
        this.fileKey = fileKey
        this.uploadStatus = uploadStatus
        this.createdAt = createdAt
        this.updateAt = updateAt
        resetTouchedOnNotNull()
    }
}
