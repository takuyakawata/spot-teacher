/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records


import com.spotteacher.infra.db.enums.UsersRole
import com.spotteacher.infra.db.tables.Users

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * 全ユーザーの共通情報を格納する基盤テーブル
 */
@Suppress("warnings")
open class UsersRecord private constructor() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var uuid: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var firstName: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var lastName: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var email: String
        set(value): Unit = set(4, value)
        get(): String = get(4) as String

    open var role: UsersRole
        set(value): Unit = set(5, value)
        get(): UsersRole = get(5) as UsersRole

    open var createdAt: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(id: Long? = null, uuid: String, firstName: String, lastName: String, email: String, role: UsersRole, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.uuid = uuid
        this.firstName = firstName
        this.lastName = lastName
        this.email = email
        this.role = role
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
