[versions]
kotlin = "2.1.20"
spring-boot = "3.4.4"
spring-batch = "5.1.1"
spring-integration = "6.2.1"
spring-graphql = "1.2.3"
spring-restdocs = "3.0.1"
spring-security = "6.2.2"
spring-dependency-management = "1.1.7"
jooq = "3.20.4"
detekt = "1.23.8"
expediagroup-graphql = "8.7.0"
flyway = "11.8.2"
valiktor = "0.12.0"
netty-resolver = "4.2.1.Final"
graphql-java-extended-scalars = "22.0"
jakarta-servlet = "6.1.0"
r2dbc-mysql = "1.4.1"
r2dbc-pool = "1.0.2.RELEASE"
mysql-connector = "9.3.0"
aws-jdbc = "2.5.6"
awaitility = "4.3.0"
jackson-datatype = "2.19.0"
kotest-runner = "5.9.1"
kotest-extensions-spring = "1.3.0"
kotest-extensions-mockserver = "1.3.0"
springmockk = "4.0.2"
mockk = "1.14.0"
aws-sdk-core = "2.31.30"
aws-sdk-services = "2.31.41"
aws-sdk-cloudfront = "2.31.21"
aws-sdk-s3 = "2.31.46"
logstash-encoder = "8.1"
arrow-core = "1.2.4"
arrow-fx = "2.1.0"
jcasbin = "1.81.0"
jcasbin-jdbc-adapter = "2.10.0"
jcasbin-jdbc-adapter-mysql = "9.3.0"
mysql = "8.3.0"
spring-dep-mgmt = "1.1.7"
dgs-codegen = "7.0.3"
asciidoctor = "3.3.2"
jackson = "2.15.3"
jjwt-api = "0.12.5"

[libraries]
# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }

# Spring Boot Starters
spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
spring-boot-aop = { module = "org.springframework.boot:spring-boot-starter-aop" }
spring-boot-data-r2dbc = { module = "org.springframework.boot:spring-boot-starter-data-r2dbc" }
spring-boot-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf" }
spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-boot-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
spring-security-oauth2-jose = { module = "org.springframework.security:spring-security-oauth2-jose" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-jooq = { module = "org.springframework.boot:spring-boot-starter-jooq" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-security-test = { module = "org.springframework.security:spring-security-test" }
spring-security-oauth2-client = { module = "org.springframework.security:spring-security-oauth2-client" }


spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-data-jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc", version.ref = "spring-boot" }
spring-boot-starter-batch = { module = "org.springframework.boot:spring-boot-starter-batch", version.ref = "spring-boot" }
spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "spring-boot" }

# Spring Other
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "spring-boot" }

# auth
jjwt-api = {module="io.jsonwebtoken:jjwt-api", version.ref="jjwt-api" }
jjwt-impl = {module="io.jsonwebtoken:jjwt-impl", version.ref="jjwt-api" }
jjwt-jackson = {module="io.jsonwebtoken:jjwt-jackson", version.ref="jjwt-api" }

# valiktor
valiktor-core = { module = "org.valiktor:valiktor-core", version.ref = "valiktor" }

# Jakarta
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakarta-servlet" }


# GraphQL
graphql-kotlin-spring-server = { module = "com.expediagroup:graphql-kotlin-spring-server", version.ref = "expediagroup-graphql" }
graphql-kotlin-schema-generator = { module = "com.expediagroup:graphql-kotlin-schema-generator", version.ref = "expediagroup-graphql" }
graphql-kotlin-hooks-provider = { module = "com.expediagroup:graphql-kotlin-hooks-provider", version.ref = "expediagroup-graphql" }
graphql-java-extended-scalars = { module = "com.graphql-java:graphql-java-extended-scalars", version.ref = "graphql-java-extended-scalars" }

# Flyway
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-mysql = { module = "org.flywaydb:flyway-mysql", version.ref = "flyway" }

# MySQL
mysql-connector = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }

# JOOQ
jooq-kotlin = { module = "org.jooq:jooq-kotlin", version.ref = "jooq" }
jooq-kotlin-coroutines = { module = "org.jooq:jooq-kotlin-coroutines", version.ref = "jooq" }
jooq-reactor-extensions = { module = "org.jooq:jooq-reactor-extensions", version.ref = "jooq" }
jooq-core = { module = "org.jooq:jooq", version.ref = "jooq" }
jooq-meta = { module = "org.jooq:jooq-meta", version.ref = "jooq" }
jooq-codegen = { module = "org.jooq:jooq-codegen", version.ref = "jooq" }

# R2DBC
r2dbc-mysql = { module = "io.asyncer:r2dbc-mysql", version.ref = "r2dbc-mysql" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version.ref = "r2dbc-pool" }

# Util
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow-core" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow-fx" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# AWS SDK
aws-sdk-core = { module = "software.amazon.awssdk:core", version.ref = "aws-sdk-core" }
aws-sdk-sesv2 = { module = "software.amazon.awssdk:sesv2", version.ref = "aws-sdk-services" }
aws-sdk-cognito = { module = "software.amazon.awssdk:cognitoidentityprovider", version.ref = "aws-sdk-services" }
aws-sdk-cloudfront = { module = "software.amazon.awssdk:cloudfront", version.ref = "aws-sdk-cloudfront" }
aws-sdk-s3 = { module = "software.amazon.awssdk:s3", version.ref = "aws-sdk-s3" }

# Logging
logstash-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash-encoder" }

# Jackson
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson-datatype" }

# Testing
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable" }

# Kotest
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest-runner" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest-runner" }
kotest-extensions-spring = { module = "io.kotest.extensions:kotest-extensions-spring", version.ref = "kotest-extensions-spring" }
kotest-extensions-mockserver = { module = "io.kotest.extensions:kotest-extensions-mockserver", version.ref = "kotest-extensions-mockserver" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }

# Mockk
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
jooq = { id = "org.jooq.jooq-codegen-gradle", version.ref = "jooq" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
expediagroup-graphql = { id = "com.expediagroup.graphql", version.ref = "expediagroup-graphql" }
flyway = { id = "org.flywaydb.flyway", version = "11.8.1" }
