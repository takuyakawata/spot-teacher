/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records


import com.spotteacher.infra.db.enums.AdminUsersAdminRole
import com.spotteacher.infra.db.tables.AdminUsers

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.types.ULong


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class AdminUsersRecord private constructor() : UpdatableRecordImpl<AdminUsersRecord>(AdminUsers.ADMIN_USERS) {

    open var id: ULong?
        set(value): Unit = set(0, value)
        get(): ULong? = get(0) as ULong?

    open var userId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var adminRole: AdminUsersAdminRole?
        set(value): Unit = set(2, value)
        get(): AdminUsersAdminRole? = get(2) as AdminUsersAdminRole?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<ULong?> = super.key() as Record1<ULong?>

    /**
     * Create a detached, initialised AdminUsersRecord
     */
    constructor(id: ULong? = null, userId: Long, adminRole: AdminUsersAdminRole? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.userId = userId
        this.adminRole = adminRole
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
