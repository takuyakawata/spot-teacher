/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records


import com.spotteacher.infra.db.tables.Companies

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class CompaniesRecord private constructor() : UpdatableRecordImpl<CompaniesRecord>(Companies.COMPANIES) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var name: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var prefecture: Long
        set(value): Unit = set(2, value)
        get(): Long = get(2) as Long

    open var city: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var street: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var postCode: String
        set(value): Unit = set(5, value)
        get(): String = get(5) as String

    open var phoneNumber: String
        set(value): Unit = set(6, value)
        get(): String = get(6) as String

    open var url: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised CompaniesRecord
     */
    constructor(id: Long? = null, name: String, prefecture: Long, city: String, street: String? = null, postCode: String, phoneNumber: String, url: String? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.name = name
        this.prefecture = prefecture
        this.city = city
        this.street = street
        this.postCode = postCode
        this.phoneNumber = phoneNumber
        this.url = url
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
