/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records

import com.spotteacher.infra.db.enums.LessonPlansLessonType
import com.spotteacher.infra.db.tables.LessonPlans
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.LocalDateTime

/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class LessonPlansRecord private constructor() : UpdatableRecordImpl<LessonPlansRecord>(LessonPlans.LESSON_PLANS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var companyId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var title: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var description: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var location: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var lessonType: LessonPlansLessonType?
        set(value): Unit = set(5, value)
        get(): LessonPlansLessonType? = get(5) as LessonPlansLessonType?

    open var annualMaxExecutions: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var published: Boolean?
        set(value): Unit = set(7, value)
        get(): Boolean? = get(7) as Boolean?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(9, value)
        get(): LocalDateTime? = get(9) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised LessonPlansRecord
     */
    constructor(
        id: Long? = null,
        companyId: Long,
        title: String? = null,
        description: String? = null,
        location: String? = null,
        lessonType: LessonPlansLessonType? = null,
        annualMaxExecutions: Long? = null,
        published: Boolean? = null,
        createdAt: LocalDateTime? = null,
        updatedAt: LocalDateTime? = null
    ) : this() {
        this.id = id
        this.companyId = companyId
        this.title = title
        this.description = description
        this.location = location
        this.lessonType = lessonType
        this.annualMaxExecutions = annualMaxExecutions
        this.published = published
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
