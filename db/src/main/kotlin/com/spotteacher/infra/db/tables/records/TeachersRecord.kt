/*
 * This file is generated by jOOQ.
 */
package com.spotteacher.infra.db.tables.records

import com.spotteacher.infra.db.tables.Teachers
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.LocalDateTime

/**
 * Teacherロールを持つユーザーの情報
 */
@Suppress("warnings")
open class TeachersRecord private constructor() : UpdatableRecordImpl<TeachersRecord>(Teachers.TEACHERS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var userId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var schoolId: Long
        set(value): Unit = set(2, value)
        get(): Long = get(2) as Long

    open var createdAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised TeachersRecord
     */
    constructor(id: Long? = null, userId: Long, schoolId: Long, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null) : this() {
        this.id = id
        this.userId = userId
        this.schoolId = schoolId
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
